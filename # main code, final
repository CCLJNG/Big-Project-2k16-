# -*- coding: utf-8 -*-
"""
Created on Wed May 25 20:55:01 2016

@author: user
"""

import pygame #Importation de notre module principal



def final(lovejaugeactuelle, bad_end, son_win, son_loose, son_musique_win, son_musique_loose, happy_end_mov):
    """
   
    si la love jauge est pleine alors le player a gagné
    sinon, il a perdu
    """
    if lovejaugeactuelle == 100:
        son_win.play() #son TADAA de victoire
        son_musique_win.play() #musique jap pour la victoire
        ending = happy_end_mov.play() # on active la vidéo de l'ending si on a gagné

                
    else:
        son_loose.play() #son de défaite
        son_musique_loose.play() #musique de défaite
        ending = bad_end 
    return ending
        

    
    
    
def fille(choix_fille, girlchoisie):
    """"
    fonction qui va renvoyer une chaîne de caractère correspondant à la fille
    qu'on voudra séduire
    """
   
    continuer = 1
    
    while continuer != 0:
        for event in pygame.event.get():   #On parcours la liste de tous les événements reçus
            if event.type == pygame.QUIT:     #Si un de ces événements est de type QUIT
                pygame.quit() # on désinitialise tous les modules de Pygame
                quit() # on quitte 
            else:
                if (event.type != pygame.MOUSEBUTTONDOWN): #tant qu'on appuie pas, on continue
                    continue           
                if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 0 < event.pos[1] < 365 and 0 < event.pos[0] <= 213:
                    girlchoisie = "clover"
                    continuer = 0 #pour sortir de la boucle
                elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 0 < event.pos[1] < 365 and 213 < event.pos[0] < 427:
                    girlchoisie = "maya"
                    continuer = 0
                elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 0 < event.pos[1] < 365 and 427 <= event.pos[0] < 640:
                    girlchoisie = "alice"
                    continuer = 0

    return girlchoisie
      
def effet_choix(n_event, lovejaugeactuelle, son_correct, son_fail, son_click, girl_pic, girl_unhappy, fenetre):
    """
    fonction qui va renvoyer un int, correspondant à la valeur de la lovejauge
    selon le choix qu'on aura pris dans le jeu
    
    n_event est un int, correspondant à l'effet du bouton choisi
    lovejaugeactuelle est un int, correspondant à la valeur de la lovejauge actuelle
    """

    if n_event == 0:
        fenetre.blit(girl_pic, (0,0))
        son_click.play()
        lovejaugeactuelle += 0
        
    elif n_event ==1:
        son_correct.play()
        fenetre.blit(girl_pic, (0,0))
        if lovejaugeactuelle < 100:
            lovejaugeactuelle += 25
        if lovejaugeactuelle == 100:
            lovejaugeactuelle += 0 # car le maximum est 100
    else:
        fenetre.blit(girl_unhappy, (0,0))
        son_fail.play()
        if lovejaugeactuelle == 0: #pour pas avoir de lovejauge négative! le minimum étant 0
            lovejaugeactuelle = 0
        elif lovejaugeactuelle > 0 and lovejaugeactuelle <= 100:
            lovejaugeactuelle -= 25
        
    return lovejaugeactuelle #retourne la veleur de lovejaugeactuelle soit, un int

def image_lovejauge(lovejauge, lovejauge_0, lovejauge_25, lovejauge_50, lovejauge_75, lovejauge_100): 
    """
    fonction qui va renvoyer une image, correspondant à la valeur de lovejauge
    c'est à dire que si lovejauge = 0 alors on renvoit l'image de la lovejauge vide    
    """
    
    if lovejauge == 0:
        lovepic = lovejauge_0
    elif lovejauge == 25:
        lovepic = lovejauge_25
    elif lovejauge == 50:
        lovepic = lovejauge_50
    elif lovejauge == 75:
        lovepic = lovejauge_75
    else:
        lovepic = lovejauge_100
        
    return lovepic #on retourne l'image de lovejauge qui correspond à sa valeur
    
    
def choix(n_event, lovejaugeactuelle, girl_pic, fenetre, son_click, son_correct, son_fail, girl_unhappy): #CA CEST LA MACHINE A SMOOTHIE OK 
    """
    fonction qui va renvoyer la valeur de la lovejauge (int)
    
    la fonction va afficher les dialogues / les interactions entre le garçon
    et la fille
    
    au tout début il y aura la phrase d'accroche du garçon et ensuite ses paroles
    seront affichées au niveau des choix, c'est le player qui va décider de sa réponse
    
    le dialogue en bas correspondra à la réponse de la fille
    
    n_event est le numero du dialogue ( dialogue 1 = première interaction ) 
    """
    
    i = 1
    choix_affiches = 0
    suite = 0 # on initalise à 0

    while i == 1:          #tant que i = 1, boucle   
        
        for event in pygame.event.get():   #On parcours la liste de tous les événements reçus
            if event.type == pygame.QUIT:     #Si un de ces événements est de type QUIT
                pygame.quit() # on désinitialise tous les modules de Pygame
                quit() #on quitte
            else:
             
                if suite == 0:
                    
                        #si on appuie sur le bouton next qui permettra d'avancer dans le dialogue alors..
                    if (event.type == pygame.MOUSEBUTTONDOWN) and (event.button == 1) and (380 < event.pos[1] < 480) and (540 < event.pos[0] < 640): 
                        son_click.play()
                        fenetre.blit(n_event[0], (0,0)) #on ajoute l'image de la réponse de la fille après la phrase d'accroche du garçon  

                        fenetre.blit(n_event[4], (0,0))
                        pygame.display.flip()
                        choix_affiches = 1
                        suite = 1 #on sort alors de la boucle et on passe à la suite :)
                        
                    else:
                        continue #tant qu'on a pas appuyer sur le bouton coeur à la bonne position on ne passera pas à la suite!
                            
                    
                if choix_affiches == 1:
                    
                    #si on appuie sur le premier choix alors...
                    if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 50 < event.pos[1] < 100 and 50 < event.pos[0] < 580:                           
                        #on attribue à la variable lovejauge, la valeur en int de la nouvelle lovejauge
                        lovejauge = effet_choix(n_event[1], lovejaugeactuelle, son_correct, son_fail, son_click, girl_pic, girl_unhappy, fenetre) 
                        i = 0 #pour sortir de la boucle et donc sortir de la fonction après
                    elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 150 < event.pos[1] < 200 and 50 < event.pos[0] < 580:
                        lovejauge = effet_choix(n_event[2], lovejaugeactuelle, son_correct, son_fail, son_click, girl_pic, girl_unhappy, fenetre)
                        i = 0
                    elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 250 < event.pos[1] < 300 and 50 < event.pos[0] < 580:
                        lovejauge = effet_choix(n_event[3], lovejaugeactuelle, son_correct, son_fail, son_click, girl_pic, girl_unhappy, fenetre)
                        i = 0
                    else:
                        continue #tant qu'on a pas appuyé sur un choix, on ne passera pas à la suite, la boucle se répète
                
    return lovejauge #retourne en int, la valeur de la love jauge!
    
def main():
    
    pygame.init() #on initialise les modules importés de pygame
   
    #ouverture de la fenêtre Pygame
    fenetre = pygame.display.set_mode((640, 480))
    
    #chargement des images du fond, des niveaux de love jauge, d'une mauvaise fin, des animations de fin et des sons
    fond = pygame.image.load("fond_classe.png").convert()
    
    lovejauge_0 = pygame.image.load("lovejauge_0.png").convert_alpha()
    lovejauge_25 = pygame.image.load("lovejauge_25.png").convert_alpha()
    lovejauge_50 = pygame.image.load("lovejauge_50.png").convert_alpha()
    lovejauge_75 = pygame.image.load("lovejauge_75.png").convert_alpha()
    lovejauge_100 = pygame.image.load("lovejauge_100.png").convert_alpha()
    
    choix_fille = pygame.image.load("choix_fille.png").convert() #on charge l'image de toutes les filles
    
    bad_end = pygame.image.load("bad_end.png").convert_alpha()
    
    son_click = pygame.mixer.Sound("click.wav")
    son_correct = pygame.mixer.Sound("correct.wav")
    son_fail = pygame.mixer.Sound("fail.wav")
    son_win = pygame.mixer.Sound("win.wav")
    son_loose = pygame.mixer.Sound("loose.wav")
    son_musique_jeu = pygame.mixer.Sound("musique_jeu.wav")
    son_musique_win = pygame.mixer.Sound("musique_win.wav")
    son_musique_loose = pygame.mixer.Sound("musique_loose.wav")
         
    son_musique_jeu.play() #on lance une musique de fond
    #collage de l'image choix_fille à la position (0,0) sur la fenetre
    fenetre.blit(choix_fille, (0,0))

    #rafraîchissement de l'écran, essentiel !
    pygame.display.flip()
    
    i = 0
    girlchoisie = ""
    boucle_interaction = 0 # pour pas qu'il skip , initialisation
    lovejaugeactuelle = 0



    for event in pygame.event.get():   #On parcours la liste de tous les événements reçus
        if event.type == pygame.QUIT:  #Si un de ces événements est de type QUIT
            pygame.quit()        #on désinitialise tous les modules de Pygame
            quit()              # o nquitte
        else:
            
            girl = fille(choix_fille, girlchoisie)
            """
    on stock dans la variable girl, la chaîne de caractère 
    correspondant à la fille qu'on aura choisi via l'appel
    de la fonction fille avec comme pour paramètre, l'image
    de choix_fille et girlchoisie(emplacement pour stocker le nom
    de la fille choisie
            """
           
            fenetre.blit(fond, (0,0)) #on ajoute à "fenetre", le fond en position (0,0)
            
            if girl == "clover":
                #on charge toutes les images concernant clover pour les 6 interactions
                #c'est à dire, le dialogue, sa tête et les choix pour elle
                girl_pic = pygame.image.load("clover_happy.png").convert_alpha()
                girl_unhappy = pygame.image.load("clover_unhappy.png").convert_alpha()
                dialogue_mec = pygame.image.load("dialogue_c_0.png").convert_alpha()
                pic_1 = pygame.image.load("dialogue_c_1.png").convert_alpha()
                pic_1_2 = pygame.image.load("choix_c_1.png").convert_alpha()
                n_event_1 = (pic_1, 1, 2, 0, pic_1_2)
                pic_2 = pygame.image.load("dialogue_c_2.png").convert_alpha()
                pic_2_2 = pygame.image.load("choix_c_2.png").convert_alpha()
                n_event_2 = (pic_2, 1, 0, 2, pic_2_2)                    
                pic_3 = pygame.image.load("dialogue_c_3.png").convert_alpha()
                pic_3_2 = pygame.image.load("choix_c_3.png").convert_alpha()
                n_event_3 = (pic_3, 1, 0, 2, pic_3_2)
                pic_4 = pygame.image.load("dialogue_c_4.png").convert_alpha()
                pic_4_2 = pygame.image.load("choix_c_4.png").convert_alpha()
                n_event_4 = (pic_4, 2, 1, 0, pic_4_2)
                pic_5 = pygame.image.load("dialogue_c_5.png").convert_alpha()
                pic_5_2 = pygame.image.load("choix_c_5.png").convert_alpha()
                n_event_5 = (pic_5, 1, 2, 0, pic_5_2)
                pic_6 = pygame.image.load("dialogue_c_6.png").convert_alpha()
                pic_6_2 = pygame.image.load("choix_c_6.png").convert_alpha()
                n_event_6 = (pic_6, 0, 1, 2, pic_6_2)

                
                happy_end_mov = pygame.movie.Movie("clover_anim.mpg")
                
                boucle_interaction = 1
                
            elif girl == "maya":
                #même principe que pour clover
                dialogue_mec = pygame.image.load("dialogue_m_0.png").convert_alpha()
                girl_pic = pygame.image.load("maya_happy.png").convert_alpha()
                girl_unhappy = pygame.image.load("maya_unhappy.png").convert_alpha()
                pic_1 = pygame.image.load("dialogue_m_1.png").convert_alpha()
                pic_1_2 = pygame.image.load("choix_m_1.png").convert_alpha()               
                n_event_1 = (pic_1, 0, 1, 2, pic_1_2)
                pic_2 = pygame.image.load("dialogue_m_2.png").convert_alpha()
                pic_2_2 = pygame.image.load("choix_m_2.png").convert_alpha()
                n_event_2 = (pic_2, 2, 0, 1, pic_2_2)
                pic_3 = pygame.image.load("dialogue_m_3.png").convert_alpha()
                pic_3_2 = pygame.image.load("choix_m_3.png").convert_alpha()
                n_event_3 = (pic_3, 2, 0, 1, pic_3_2)
                pic_4 = pygame.image.load("dialogue_m_4.png").convert_alpha()
                pic_4_2 = pygame.image.load("choix_m_4.png").convert_alpha()
                n_event_4 = (pic_4, 2, 1, 0, pic_4_2)
                pic_5 = pygame.image.load("dialogue_m_5.png").convert_alpha()
                pic_5_2 = pygame.image.load("choix_m_5.png").convert_alpha()
                n_event_5 = (pic_5, 0, 2, 1, pic_5_2)
                pic_6 = pygame.image.load("dialogue_m_6.png").convert_alpha()
                pic_6_2 = pygame.image.load("choix_m_6.png").convert_alpha()
                n_event_6 = (pic_6, 0, 1, 2, pic_6_2)
                
                happy_end_mov = pygame.movie.Movie("maya_anim.mpg")
                
                boucle_interaction = 1
                
            elif girl == "alice":
                #même principe que pour clover
                dialogue_mec = pygame.image.load("dialogue_a_0.png").convert_alpha()
                girl_pic = pygame.image.load("alice_happy.png").convert_alpha()
                girl_unhappy = pygame.image.load("alice_unhappy.png").convert_alpha()
                pic_1 = pygame.image.load("dialogue_a_1.png").convert_alpha()
                pic_1_2 = pygame.image.load("choix_a_1.png").convert_alpha()
                n_event_1 = (pic_1, 0, 1, 2, pic_1_2)
                pic_2 = pygame.image.load("dialogue_a_2.png").convert_alpha()
                pic_2_2 = pygame.image.load("choix_a_2.png").convert_alpha()
                n_event_2 = (pic_2, 1, 2, 0, pic_2_2)
                pic_3 = pygame.image.load("dialogue_a_3.png").convert_alpha()
                pic_3_2 = pygame.image.load("choix_a_3.png").convert_alpha()
                n_event_3 = (pic_3, 0, 1, 2, pic_3_2)
                pic_4 = pygame.image.load("dialogue_a_4.png").convert_alpha()
                pic_4_2 = pygame.image.load("choix_a_4.png").convert_alpha()
                n_event_4 = (pic_4, 1, 0, 0, pic_4_2)
                pic_5 = pygame.image.load("dialogue_a_5.png").convert_alpha()
                pic_5_2 = pygame.image.load("choix_a_5.png").convert_alpha()
                n_event_5 = (pic_5, 1, 0, 2, pic_5_2)
                pic_6 = pygame.image.load("dialogue_a_6.png").convert_alpha()
                pic_6_2 = pygame.image.load("choix_a_6.png").convert_alpha()
                n_event_6 = (pic_6, 1, 2, 0, pic_6_2)
                
                happy_end_mov = pygame.movie.Movie("alice_anim.mpg")
                
                boucle_interaction = 1
                
            if boucle_interaction == 1:    
                
                fenetre.blit(girl_pic, (0,0)) #on ajoute à la fenetre, l'image de la fille

                pygame.display.flip() #on rafraichit
               
                while i <= 6:

                    #Pour les 6 interactions on appellera la fonction choix et image_lovejauge 
                    if i == 0:
                        fenetre.blit(dialogue_mec, (0,0)) #tout d'abord, on place le dialogue du garçon
                        n_event = n_event_1                
                        pygame.display.flip()
                        i += 1
                    
                    elif i == 1:
                        n_event = n_event_2
                        i += 1
                        
                    elif i == 2:
                        n_event = n_event_3
                        i += 1
                        
                    elif i == 3:
                        n_event = n_event_4     
                        i += 1
       
                    elif i == 4:
                        n_event = n_event_5 
                        i += 1
                        
                    elif i == 5:
                        n_event = n_event_6         
                        i += 1
                    
                    
                    """
                    on stock dans la variable lovejaugeactuelle la valeur de 
                    la love jauge suite au choix établi
                    via la fonction choix qui utilise un tuple n_vent, la 
                    love jauge actuelle (int), l'image de la fille à séduire
                    et la fenetre du jeu
                    """
                    
                    lovejaugeactuelle = choix(n_event, lovejaugeactuelle, girl_pic, fenetre, son_click, son_correct, son_fail, girl_unhappy)

                    """
                    on stock l'image correspondant au niveau de la lovejauge 
                    dans la variable lovepic
                    via la fonction image_lovejauge qui utilise la valeur 
                    de la lovejauge 
                    ainsi que les images de tous les niveaux de lovejauge possible
                    """
                    
                    lovepic = image_lovejauge(lovejaugeactuelle, lovejauge_0, lovejauge_25, lovejauge_50, lovejauge_75, lovejauge_100)
                    fenetre.blit(lovepic, (0,0)) #on ajoute bien sur l'image de la lovejaugeactuelle à la fenêtre
                    pygame.display.flip() #on rafraichit
                
                    if i == 6: #on arrive à la phase finale
                        son_musique_jeu.stop()                        
                        findujeu = final(lovejaugeactuelle, bad_end, son_win, son_loose, son_musique_win, son_musique_loose, happy_end_mov)

                        if findujeu == bad_end:
                            fenetre.blit(findujeu, (0,0))
                        

                        pygame.display.flip()
                        
                        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and 0 < event.pos[1] < 640 and 0 < event.pos[0] < 480:
                            pygame.quit()
                            quit()

                    
main()
